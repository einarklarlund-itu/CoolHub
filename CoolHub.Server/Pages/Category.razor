@page "/category/{categoryIdString}"
@namespace CoolHub

@using CoolHub.ViewModels
@using CoolHub.Models
@using System.ComponentModel
@using Microsoft.Extensions.Configuration

@inject CategoryViewModel CategoryViewModel
@inject IConfiguration Configuration

@if (category == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>@category.Name</h1>

    <p>@category.Description</p>

    @* <table class="table">
        <thead>
            <tr>
                <th>Topic</th>
                <th>Description</th>
                <th>Resources</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var topic in category.Topics)
            {
                <tr>
                    <td>@topic.Name</td>
                    <td>@topic.Description</td>
                    <td>@ResourceDTOsToString(topic.Resources)</td>
                </tr>
            }
        </tbody>
    </table> *@
    
    <CascadingValue Value=@TopicDTOs Name="TopicDTOs">
        <TopicListComponent  @ref="topicListComponent"> </TopicListComponent>
    </CascadingValue>

    <CascadingValue Value=@NewTopic Name="NewTopic">
        <TopicFormComponent OnCategoryFormSubmitted="CategoryFormSubmittedHandler"> </TopicFormComponent>
    </CascadingValue>
}

@code {
    [Parameter]
    public string categoryIdString { get; set; }

    public ICollection<TopicDTO> TopicDTOs => category.Topics.ToList();

    public TopicCreateDTO NewTopic { get; set; }

    private int categoryId;

    private CategoryDetailsDTO category;

    private TopicListComponent topicListComponent;

    protected override void OnInitialized()
    {
        if(Int32.TryParse(categoryIdString, out categoryId))
        {
            category = CategoryViewModel.GetCategoryById(categoryId);
        }
        else
        {
            // some error handling behavior?
        }

        NewTopic = new TopicCreateDTO();
    }

    private void CategoryFormSubmittedHandler()
    {
        NewTopic.CategoryId = categoryId;

        CategoryViewModel.CreateTopic(NewTopic);
        
        NewTopic = new TopicCreateDTO();

        topicListComponent.UpdateList();
    }

    private string ResourceDTOsToString(ICollection<ResourceDTO> resourceDTOs)
    {
        string str = "";
        
        foreach(var resourceDTO in resourceDTOs)
        {
            str += resourceDTO.Name + ", ";
        }

        return str.Length > 2 ? str.Substring(0, str.Length - 2) : "";
    }
}