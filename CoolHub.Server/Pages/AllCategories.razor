@page "/all-categories"

@namespace CoolHub

@using CoolHub.ViewModels
@using CoolHub.Models
@using System.ComponentModel

@inject AllCategoriesViewModel AllCategoriesViewModel
@implements IDisposable

@* Add the viewmodel as a cascading value, so that all the children of the 
ToDoPage component have a reference to the viewmodel*@

<div class="Tutorials-pagecontent">
    <h1 class="Tutorials-header">Choose what to learn</h1>
    <br>
    @* <h1>Number of categories: @AllCategoriesViewModel.NumberOfCategories()</h1> *@

    <CascadingValue Value=@AllCategoriesViewModel Name="AllCategoriesViewModel">
        <CategoryListComponent />
        <CategoryFormComponent />
    </CascadingValue>

</div>

@code 
{
    // update the entire view, the page and its components on PropertyChanged
    protected override async Task OnInitializedAsync()
    {
        AllCategoriesViewModel.PropertyChanged += async (sender, e) => { 
            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        };
        await base.OnInitializedAsync();
    }

    private async void OnPropertyChangedHandler(object sender, PropertyChangedEventArgs e)
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        AllCategoriesViewModel.PropertyChanged -= OnPropertyChangedHandler;
    }
}