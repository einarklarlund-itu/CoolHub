@page "/all-categories"

@namespace CoolHub

@using CoolHub.ViewModels
@using System.ComponentModel
@using Microsoft.Extensions.Configuration

@inject CategoriesViewModel CategoriesViewModel
@inject IConfiguration Configuration
@implements IDisposable

@* Add the viewmodel as a cascading value, so that all the children of the 
ToDoPage component have a reference to the viewmodel*@

<CascadingValue Value=@CategoriesViewModel Name="CategoriesViewModel">
    <CategoryListComponent />
    <CategoryFormComponent />
</CascadingValue>

@* <h1>Number of categories: @CategoriesViewModel.NumberOfCategories()</h1> *@

@code 
{
    // update the entire view, the page and its components on PropertyChanged
    protected override async Task OnInitializedAsync()
    {
        CategoriesViewModel.PropertyChanged += async (sender, e) => { 
            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        };
        await base.OnInitializedAsync();
    }

    async void OnPropertyChangedHandler(object sender, PropertyChangedEventArgs e)
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        CategoriesViewModel.PropertyChanged -= OnPropertyChangedHandler;
    }
}